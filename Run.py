import asyncio
import time
from ATR import calculate_atr
from Step import fetch_btc_candles, analyze_candle
from Deal import simulate_trade
from Telegram import send_telegram_message
from Start_stop import monitor_schedule  # ‚¨ÖÔ∏è –ê–≤—Ç–æ—Å—Ç–∞—Ä—Ç –∏ –∞–≤—Ç–æ—Å—Ç–æ–ø –ø–æ –≤—Ä–µ–º–µ–Ω–∏

btc_symbol = "BTCUSDT"

async def main():
    asyncio.create_task(monitor_schedule())  # ‚è∞ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã–π –∑–∞–ø—É—Å–∫ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏—è
    asyncio.create_task(report_hourly_pnl())

    while True:
        try:
            # ‚è≥ –ñ–¥—ë–º –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–æ–≤–æ–π —Å–≤–µ—á–∏
            now = time.time()
            wait = 300 - (now % 300)
            send_telegram_message(f"‚è≥ –ñ–¥—ë–º –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–æ–≤–æ–π —Å–≤–µ—á–∏: {int(wait)} —Å–µ–∫...")
            await asyncio.sleep(wait)

            # üü° –ü–æ–ª—É—á–∞–µ–º ATR
            btc_atr = await calculate_atr()
            send_telegram_message(f"üü° BTC ATR: {btc_atr:.2f}")

            # üëÅ –ù–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ —Å–≤–µ—á–æ–π
            while True:
                btc_df = await fetch_btc_candles()
                delta, direction, price = await analyze_candle(btc_df, btc_atr)

                if delta >= 0.25 * btc_atr:
                    send_telegram_message(f"üìà Œî –¥–æ—Å—Ç–∏–≥ 25% ATR ‚Äî –æ—Ç–∫—Ä—ã—Ç–∏–µ —Å–¥–µ–ª–∫–∏")
                    await simulate_trade(direction, delta, btc_atr)
                    break
                else:
                    await asyncio.sleep(10)

        except Exception as e:
            send_telegram_message(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")

        send_telegram_message("‚úÖ –¶–∏–∫–ª –∑–∞–≤–µ—Ä—à—ë–Ω ‚Äî –æ–∂–∏–¥–∞–Ω–∏–µ —Å–ª–µ–¥—É—é—â–µ–π —Å–≤–µ—á–∏")

if __name__ == "__main__":
    asyncio.run(main())
