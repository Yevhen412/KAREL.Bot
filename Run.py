import asyncio
import time
from ATR import calculate_atr
from Step import fetch_btc_candles, analyze_candle
from Deal import simulate_trade
from Telegram import send_telegram_message
from Start_stop import monitor_schedule  # ‚è∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏

btc_symbol = "BTCUSDT"

async def main():
    while True:
        try:
            # ‚è∞ –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
            if not is_trading_hours():
                send_telegram_message("‚è∏ –í–Ω–µ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ –æ–∫–Ω–∞ (23:00‚Äì08:00 –ø–æ NL). –û–∂–∏–¥–∞–µ–º 08:00...")
                await asyncio.sleep(600)
                continue

            # ‚åõ –ñ–¥—ë–º –Ω–∞—á–∞–ª–∞ –Ω–æ–≤–æ–π —Å–≤–µ—á–∏
            now = time.time()
            wait = 300 - (now % 300)
            send_telegram_message(f"‚è≥ –ñ–¥—ë–º –æ—Ç–∫—Ä—ã—Ç–∏—è –Ω–æ–≤–æ–π —Å–≤–µ—á–∏: {int(wait)} —Å–µ–∫...")
            await asyncio.sleep(wait)

            # 1. –†–∞—Å—á—ë—Ç ATR
            btc_atr = await calculate_atr()
            send_telegram_message(f"üü° BTC ATR: {btc_atr:.2f}")

            # 2. –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ç–µ–∫—É—â–µ–π —Å–≤–µ—á–∏
            entry_triggered = False
            direction = None
            entry_price = None
            delta = 0

            while True:
                btc_df = await fetch_btc_candles()
                delta, direction, current_price = await analyze_candle(btc_df, btc_atr)

                if delta >= 0.25 * btc_atr and not entry_triggered:
                    entry_triggered = True
                    entry_price = current_price
                    tp = entry_price + 0.5 * btc_atr if direction == "up" else entry_price - 0.5 * btc_atr
                    sl = entry_price - 0.25 * btc_atr if direction == "up" else entry_price + 0.25 * btc_atr
                    simulate_trade(direction, entry_price, tp, sl)
                    send_telegram_message(
                        f"üìà –°–¥–µ–ª–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∞ –ø–æ BTC\nŒî: {delta:.2f}\nDirection: {direction.upper()}\n"
                        f"Entry: {entry_price:.2f}\nTP: {tp:.2f}\nSL: {sl:.2f}"
                    )
                    break  # –ó–∞–≤–µ—Ä—à–∞–µ–º —Ü–∏–∫–ª ‚Äî –∂–¥—ë–º –Ω–æ–≤—É—é —Å–≤–µ—á—É
                else:
                    await asyncio.sleep(10)

        except Exception as e:
            send_telegram_message(f"‚ùå –û—à–∏–±–∫–∞ –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Ü–∏–∫–ª–µ: {e}")

        send_telegram_message("‚úÖ –¶–∏–∫–ª –∑–∞–≤–µ—Ä—à—ë–Ω ‚Äî –æ–∂–∏–¥–∞–µ–º —Å–ª–µ–¥—É—é—â—É—é 5-–º–∏–Ω —Å–≤–µ—á—É")

if __name__ == "__main__":
    asyncio.run(main())
