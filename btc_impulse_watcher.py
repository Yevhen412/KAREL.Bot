import asyncio
import websockets
import json
import time
from collections import deque

SYMBOL = "BTCUSDT"
WINDOW_SECONDS = 10
THRESHOLD_PERCENT = 0.3
HEARTBEAT_INTERVAL = 600  # 10 –º–∏–Ω—É—Ç

price_window = deque()
last_heartbeat = time.time()

async def watch_btc():
    url = "wss://stream.bybit.com/v5/public/linear"

    async with websockets.connect(url) as ws:
        subscribe_msg = {
            "op": "subscribe",
            "args": [f"publicTrade.{SYMBOL}"]
        }
        await ws.send(json.dumps(subscribe_msg))
        print(f"üì° –ü–æ–¥–∫–ª—é—á–µ–Ω–æ –∫ WebSocket –¥–ª—è {SYMBOL}... –û–∂–∏–¥–∞–Ω–∏–µ –∏–º–ø—É–ª—å—Å–∞...")

        while True:
            try:
                message = await ws.recv()
                data = json.loads(message)

                if "data" in data and isinstance(data["data"], list):
                    trade = data["data"][0]
                    price = float(trade["p"])
                    ts = int(trade["T"]) // 1000  # —Å–µ–∫—É–Ω–¥—ã

                    price_window.append((ts, price))
                    while price_window and ts - price_window[0][0] > WINDOW_SECONDS:
                        price_window.popleft()

                    # –†–∞—Å—á—ë—Ç –∏–º–ø—É–ª—å—Å–∞
                    if len(price_window) >= 2:
                        old_price = price_window[0][1]
                        change = (price - old_price) / old_price * 100
                        if abs(change) >= THRESHOLD_PERCENT:
                            direction = "üìà —Ä–æ—Å—Ç" if change > 0 else "üìâ –ø–∞–¥–µ–Ω–∏–µ"
                            print(f"\nüö® –ò–º–ø—É–ª—å—Å BTC: {direction} –Ω–∞ {change:.2f}% –∑–∞ {WINDOW_SECONDS} —Å–µ–∫ (—Ü–µ–Ω–∞: {old_price:.2f} ‚Üí {price:.2f})\n")
                            price_window.clear()
                            last_heartbeat = time.time()  # —Å–±—Ä–æ—Å–∏–º —Ç–∞–π–º–µ—Ä

                    # –ü—Ä–æ–≤–µ—Ä–∫–∞ heartbeat
                    if time.time() - last_heartbeat > HEARTBEAT_INTERVAL:
                        print(f"‚åõ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç. –û–∂–∏–¥–∞–Ω–∏–µ –∏–º–ø—É–ª—å—Å–∞... –¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞: {price}")
                        last_heartbeat = time.time()

            except Exception as e:
                print("–û—à–∏–±–∫–∞:", e)
                await asyncio.sleep(5)

asyncio.run(watch_btc())