from typing import Optional
from config import TICK_SIZE, ORDER_LIFETIME, MAKER_FEE
from utils import now_ms
from telegram import log

class OrderManager:
    """
    –ú–∞—Ä–∫–µ—Ç-–º–µ–π–∫–µ—Ä:
      - –°—Ç–∞–≤–∏—Ç –ª–∏–º–∏—Ç–∫—É –Ω–∞ –ø–æ–∫—É–ø–∫—É –ø–æ bid
      - –°—Ç–∞–≤–∏—Ç –ª–∏–º–∏—Ç–∫—É –Ω–∞ –ø—Ä–æ–¥–∞–∂—É –ø–æ ask
      - –ü—Ä–∏ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏–∏ –æ–¥–Ω–æ–π —Å—Ç–æ—Ä–æ–Ω—ã, –∑–∞–∫—Ä—ã–≤–∞–µ—Ç –µ—ë –≤—Å—Ç—Ä–µ—á–Ω–æ–π —Å–¥–µ–ª–∫–æ–π
    """
    def __init__(self, simulator):
        self.sim = simulator
        self.last_place_ts: Optional[int] = None
        self.current_bid_price: Optional[float] = None
        self.current_ask_price: Optional[float] = None

    def on_orderbook(self, best_bid: float, best_ask: float):
        spread = round(best_ask - best_bid, 10)

        # –ù–µ –ª–µ–∑–µ–º, –µ—Å–ª–∏ —Å–ø—Ä–µ–¥ –º–µ–Ω—å—à–µ 2 —Ç–∏–∫–æ–≤ (–Ω–µ–≤—ã–≥–æ–¥–Ω–æ)
        if spread < 2 * TICK_SIZE:
            return

        # --- –õ–∏–º–∏—Ç–∫–∞ –Ω–∞ –ø–æ–∫—É–ø–∫—É ---
        bid_price = best_bid
        if self.sim.open_buy_order is None:
            self.sim.place_entry_limit("long", bid_price)
            self.current_bid_price = bid_price
            log(f"üì• Bid –ª–∏–º–∏—Ç–∫–∞ {bid_price}")
        elif abs(bid_price - (self.current_bid_price or 0)) >= TICK_SIZE:
            self.sim.cancel_buy()
            self.sim.place_entry_limit("long", bid_price)
            self.current_bid_price = bid_price
            log(f"‚ôª –ü–µ—Ä–µ—Å—Ç–∞–≤–∏–ª–∏ Bid {bid_price}")

        # --- –õ–∏–º–∏—Ç–∫–∞ –Ω–∞ –ø—Ä–æ–¥–∞–∂—É ---
        ask_price = best_ask
        if self.sim.open_sell_order is None:
            self.sim.place_entry_limit("short", ask_price)
            self.current_ask_price = ask_price
            log(f"üì§ Ask –ª–∏–º–∏—Ç–∫–∞ {ask_price}")
        elif abs(ask_price - (self.current_ask_price or 0)) >= TICK_SIZE:
            self.sim.cancel_sell()
            self.sim.place_entry_limit("short", ask_price)
            self.current_ask_price = ask_price
            log(f"‚ôª –ü–µ—Ä–µ—Å—Ç–∞–≤–∏–ª–∏ Ask {ask_price}")
